{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/cardList.js","components/searchbox.js","components/scroll.js","components/ErrorBoundary.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","props","className","alt","src","id","name","email","CardList","robots","cardComponent","map","users","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","ErrorBoundary","state","hasError","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","response","json","filteredRobots","filter","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"mNAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,oCCUCQ,EAfF,SAACC,GACZ,OACE,mCACJ,sBAAKC,UAAU,kDAAf,UACE,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAAMI,MACvD,gCACE,6BAAKJ,EAAMK,OACX,4BAAIL,EAAMM,iBCQGC,G,MAbE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACXC,EAAgBD,EAAOE,KAAI,SAACC,EAAOC,GACvC,OACA,cAAC,EAAD,CAAcR,GAAII,EAAOI,GAAGR,GAAIC,KAAMG,EAAOI,GAAGP,KAAMC,MAAOE,EAAOI,GAAGN,OAA5DM,MAGb,OACE,mCACGH,MCFQI,EARG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAClB,OACE,qBAAKb,UAAU,MAAf,SACC,uBAAOA,UAAU,MAAMc,KAAK,SAASC,YAAY,gBAAgBC,SAAUH,OCKjEI,G,MARA,SAAClB,GACd,OACI,qBAAKmB,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACItB,EAAMuB,aCiBDC,E,kDAnBb,WAAYxB,GAAQ,IAAD,8BACjB,cAAMA,IACCyB,MAAQ,CACXC,UAAU,GAHG,E,gEAQnBC,KAAKC,SAAS,CAACF,UAAS,M,+BAItB,OAAGC,KAAKF,MAAMC,SACL,uGAEJC,KAAK3B,MAAMuB,a,GAhBQM,aCiDbC,E,kDA3CX,aAAe,IAAD,8BACV,gBAOJC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAAEK,YAAaD,EAAME,OAAOC,SAPxC,EAAKV,MAAQ,CACTjB,OAAO,GACPyB,YAAY,IAJN,E,gEAYG,IAAD,OAChBG,MAAM,8CAA8C3C,MAAK,SAAA4C,GACvD,OAAOA,EAASC,UACf7C,MAAK,SAAAkB,GACN,EAAKiB,SAAS,CAACpB,OAAOG,S,+BAId,IAAD,OAED4B,EAAiBZ,KAAKF,MAAMjB,OAAOgC,QAAO,SAAAhC,GAC9C,OAAOA,EAAOH,KAAKoC,cAAcC,SAAS,EAAKjB,MAAMQ,YAAYQ,kBAErE,OAA0B,IAAtBd,KAAKF,MAAMjB,OACN,0CAGD,sBAAKP,UAAU,KAAf,UACM,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWa,aAAca,KAAKI,iBAClC,cAAC,EAAD,UACM,cAAC,EAAD,UACE,cAAC,EAAD,CAAUvB,OAAQ+B,e,GAnCtBV,aCAlBc,IAASC,OACP,mCACA,cAAC,EAAD,MAEAC,SAASC,eAAe,SAM1BxD,M","file":"static/js/main.044e398d.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nconst Card = (props) => {\r\n  return (\r\n    <>\r\n<div className='tc bg-light-green dib br3 pa3 ma2 grow shadow-5'>\r\n  <img alt='robots' src={`https://robohash.org/${props.id}`} />\r\n<div>\r\n  <h3>{props.name}</h3>\r\n  <p>{props.email}</p>\r\n  </div>\r\n</div>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card';\r\nimport './Card.css';\r\n\r\nconst CardList = ({robots}) => {\r\n  const cardComponent = robots.map((users, i)=>{\r\n    return (\r\n    <Card key={i} id={robots[i].id} name={robots[i].name} email={robots[i].email} />\r\n      );\r\n  })\r\n  return (\r\n    <>\r\n      {cardComponent}\r\n      </>\r\n    );\r\n}\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n  return (\r\n    <div className='pa2'>\r\n     <input className='pa3' type='search' placeholder='search robots' onChange={searchChange}/>\r\n     </div>\r\n   );\r\n}\r\n\r\nexport default SearchBox;\r\n","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n      <div style={{overflowY: 'scroll', border: '1px solid black', height: '500px'}}>\r\n         {props.children}\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Scroll;\r\n","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n      this.state = {\r\n        hasError: false\r\n      }\r\n  }\r\n\r\ncomponentDidCatch() {\r\n  this.setState({hasError:true});\r\n}\r\n\r\n  render() {\r\n    if(this.state.hasError) {\r\n      return <h1>Well seems something went wrong, please stand by or check back later.</h1>\r\n    }\r\n  return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React, {Component} from 'react';\r\nimport CardList from '../components/cardList';\r\nimport SearchBox from '../components/searchbox';\r\nimport './App.css';\r\nimport Scroll from '../components/scroll';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            robots:[],\r\n            searchfield:''\r\n        };\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n      this.setState({ searchfield: event.target.value })\r\n    }\r\n\r\ncomponentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users').then(response =>{\r\n      return response.json();\r\n    }).then(users=> {\r\n      this.setState({robots:users})\r\n    })\r\n}\r\n\r\n    render() {\r\n\r\n      const filteredRobots = this.state.robots.filter(robots => {\r\n        return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\r\n      })\r\n    if (this.state.robots === 0) {\r\n      return <h1>Loading </h1>\r\n    } else {\r\n        return (\r\n            <div className='tc'>\r\n                  <h1 className='f1'>Robofriends</h1>\r\n                  <SearchBox searchChange={this.onSearchChange} />\r\n              <Scroll>\r\n                    <ErrorBoundary>\r\n                      <CardList robots={filteredRobots}/>\r\n                   </ErrorBoundary>\r\n              </Scroll>\r\n            </div>\r\n        );\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport App from './containers/App';\n\nReactDOM.render(\n  <>\n  <App />\n    </>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}